q()
library(ggplot2)
library(slidify)
install.packages(c("slidify", "ggplot2", "devtools"))
g
setRepositories()
install.packages(
"slidify")
library("slidify", "ggplot2", "devtools"))
library(c(slidify, ggplot2, devtools))
library(slidify)
library(ggplot2)
library(devtools)
install.packages("rtools")
install.packages("Rtools")
find_rtools
find_rtools()
install.packages("slidify")
setRepositories()
install.packages("slidify")
library(devtools)
library(ggplot2)
library(slidify)
install.packages('slidify', repo='https://cran.cnr.Berkeley.edu/')
getOption('repos')
install.packages('slidify', repo='http://ftp.ussg.iu.edu/CRAN')
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(GenomicFeatures)
search()
library(AnnotationDbi)
search()
library(slidify)
install.packages('slidify')
install.packages('slidify')
library(devtools)
find_rtools()
install.packages('slidify')
q()
q()
q()
getwd()
getwd()
setwd("C:/RWDir/")
getwd()
getwd()
getwd()
setwd("./02_GettingAndCleaningData")
setwd("C:/RWDir/coursera-data-sci/coursera-data-sci/02_GettingAndCleaningData")
if(!file.exists("data")){
dir.create("data")
}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
list.files("./data")
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
download.file(fileUrl,destfile="./data/cameras.csv")
dateDownloaded <- date()
dateDownloaded
cameraData <- read.table("./data/camera.csv")
header(cameraData)
head(cameraData)
cameraData <- read.table("./data/cameras.csv")
head(cameraData)
cameraData <- read.table("./data/cameras.csv", sep=",", header = TRUE)
head(cameraData)
head(cameraData)
getwd()
library(xlsx)
library(gdata)
install.packages("xlsx")
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(rJava)
library(rJava)
DF = data.frame(x = rnorm(9), y = rep(c("a", "b", "c"), each=3), z = rnorm(9))
DT = data.table(x = rnorm(9), y = rep(c("a", "b", "c"), each=3), z = rnorm(9))
library(data.table)
install.packages("data.table")
library(data.table)
DT = data.table(x = rnorm(9), y = rep(c("a", "b", "c"), each=3), z = rnorm(9))
DT
DT[2,]
DT[DT$y=="a",]
DT[c(2,3)]
DT[, c(2,3)] # this does not subset the columns
DT
{
x = 1
y = 2
}
k = {print(10); 5}
print(k)
set.seed(13435)
x <- data.frame("var1"=sample(1:5), "var2"=sample(6:10), "var3"=sample(11:15))
x
x<- x[sample(1:5),]
x
x<- x[sample(1:5),]; x$var2[c(1,3)] = NA
x
x[,1]
x[, "var1"]
x[(x$var1 <= 3 & x$var3 > 11),]
x[which(x$var2>8)]
x[which(x$var2>8),]
x[x$var2>8,]
x
x[order(x$var1),]
library(plyr)
arrange(x, var1)
arrange(x, desc(var1))
x$var4
x$var4 <- norm(5)
x$var4 <- rnorm(5)
x
y <- cbind(x, rnorm(5))
y
y <- cbind(rnorm(5), x)
y
y <- cbind(x, rnorm(5))
y
install.packages("swirl")
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(car$dist), "SIRL rules!")
text(mean(cars$speed), max(car$dist), "SWIRL rules!")
head(cars)
text(mean(cars$speed), max(cars$dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout =c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout =c(2,2
))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month, airquality)
boxplot(Ozone~Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
title(main = "Ozone and wind in New York City")
title(main="Ozone and wind in New York City")
title(main="Ozone and Wind in New York City")
with(airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par()$fg
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, type="n")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality, month = 5)
may <- subset(airquality, Month == 5)
points(may, Wind, Ozone)
?plot
with(may, plot(Wind, Ozone, col = "blue"))
with(may, plot(Wind, Ozone, col = "blue", pch = 17))
points(may$Wind,may$Ozone,col="blue",pch=17)
may <- subset(airquality, Month != 5)
notmay <- subset(airquality, Month != 5)
?pch
pints(notmay$Wind, notmay$Ozone, col="red", pch=8)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend("topright", pch = c(17, 8), col = c("blue", "red"), legend = c("May", "Other Months"))
abline(v = median(airquality$Wind), lty = 2)
abline(v = median(airquality$Wind), lty = 2, lwd=2)
par(mfrow=c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4, 4, 2, 1), oma = c(0, 0, 2, 0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
library(lattice)
library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
airquality <- transform(airquality, Month = factor(Month))
q
xyplot(Ozone ~ Wind | Month, data = airquality, layout(1,5))
p <- xyplot(Ozone ~ Wind, data = airquality)
print(p)
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
swirl()
install_from_swirl("Lattice Plotting System")
swirl()
swirl()
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, airquality)
xyplot(Ozone ~ Wind, airquality, col = "red", pch = 8)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
play()
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
next()
?
?
""
:
p <- xyplot(Ozone ~ Wind, data = airquality)
p
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main =
"Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind | Month, data = airquality)
p <- xyplot(Ozone ~ wind, data = airquality)
p <- xyplot(Ozone ~ Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f)
xyplot(y ~ x | f, layout = c(2, 1))
v1
v2
myedit("plot1.R")
source(pathtofile("plot1.R", local = TRUE))
source(pathtofile("plot1.R"), local = TRUE)
myedit("plot2.R")
source(pathtofile("plot2.R"), local = TRUE)
str(diamonds)
table(diamonds$color)
table(diamonds$color, diamonds$cut)
myedit("myLabels.R")
source(pathfile("myLabels.R"), local = TRUE)
source(pathTOfile("myLabels.R"), local = TRUE)
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, strip = FALSE, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
xyplot(price~carat | color*cut, data = diamonds, pch = 20, xlab = myxlab, ylab = myylab, main = mymain)
sample(colors())
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(seq(0,1, len=6))
p1 <- colorRampPalette(c("red", "blue"))
p1(2)
p1(6)
swirl()
library(swirl)
swirl()
2
bye()
swirl()
