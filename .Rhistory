q()
library(ggplot2)
library(slidify)
install.packages(c("slidify", "ggplot2", "devtools"))
g
setRepositories()
install.packages(
"slidify")
library("slidify", "ggplot2", "devtools"))
library(c(slidify, ggplot2, devtools))
library(slidify)
library(ggplot2)
library(devtools)
install.packages("rtools")
install.packages("Rtools")
find_rtools
find_rtools()
install.packages("slidify")
setRepositories()
install.packages("slidify")
library(devtools)
library(ggplot2)
library(slidify)
install.packages('slidify', repo='https://cran.cnr.Berkeley.edu/')
getOption('repos')
install.packages('slidify', repo='http://ftp.ussg.iu.edu/CRAN')
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(GenomicFeatures)
search()
library(AnnotationDbi)
search()
library(slidify)
install.packages('slidify')
install.packages('slidify')
library(devtools)
find_rtools()
install.packages('slidify')
q()
q()
q()
x <- list(foo = 1:4, bar=0.6)
x
x[1]
x[[1]]
x$foo
x[bar]
x[foo]
x[[foo]]
x[["foo"]]
x["foo"]
x[c(1,2)]
x[[c(1,2)]]
name <- foo
name <- "foo"
name
x$name
x[name]
x[[name]]
ls
ls()
x
x[c(1,3)]
x <- list(a=list(10, 12, 14), b=c(3.14, 2.18))
x
x[1, 2]
x[c(1, 2)]
x$a
x[[1]]
x[["a"]]
x[c(1, 2)]
x[[c(1, 2)]]
x
x
x[c(2,1)]
x[2]
x$b
x[[c(2,1)]]
x[[c(2,2)]]
x[[c(1,3)]]
x
x <- matrix(1:6, 2, 3)
ls
x
clear
clear()
x[1,2]
x[1]
x[1,]
x[,2]
x[1,2]
x[1, 2, drop=FALSE]
x[1,]
x[1, , drop=FALSE]
x[2]
x
x[, 2]
x[2, ]
x[1, ]
x <- list(aardvark = 1:5)
x
x$a
x
x$a
x[a]
x["a"]
x[["a"]]
x[["a", exact = FALSE]]
x$a
x <- c(1,2, NA, 4, NA, 5)
x
bad <- is.na(x)
ls()
x
bad
x[bad]
x[!bad]
x[[bad]]
airquality[1:6, ]
airquality
airquality[1:6, ]
good <- complete.cases(airquality)
airquality[good]
good
airquality[good, ][1:6, ]
airquality[1:6, ]
airquality[, good][1:6, ]
airquality[, good][]
airquality[, good][, 1:2]
airquality[, good][1,4 ]
airquality[1,4]
airquality[1,1:4]
airquality[, good][1,1:4]
airquality[1, good][1,1:4]
airquality
good
x <-1:4
x
y <- 6:9
y
x + y
x > 2
y == 8
x * y
x/y
x <- matrix(1:4, 2, 2)
x
y <- rep((10,4), 2, 2)
y <- matrix(rep((10,4), 2, 2))
y <- matrix(rep(10,4), 2, 2)
y
x
x * y
x / y
x %*% y
x
y
x <- 4L
x
class(x)
x <- c(4, "a", TRUE)
x
class(x)
x <- c(1, 3, 5)
y <- c(3, 2, 10)
x
y
rbind(x,y)
x <- list(2, "a", "b", TRUE)
x
x[[1]]
x <- 1:4
y <- 2
x + y
x <- c(17, 14, 4, 5, 13, 12, 10)
x
x[x >= 11] <- 4
x
wd()
getwd()
getwd()
read.csv("hw1_data")
read.csv("hw1_data.csv")
mydata
mydata <- read.csv("hw1_data.csv")
mydata
names(mydata)
mydata[1:2,]
mydata[c(152, 153),]
mydata[47,]
mydata[47,"Ozone"]
is.na(mydata)
mydata[47,"Ozone"]
mydata[47,]
test <- is.na(mydata)
mydata[!test]
mydata@ozone
names(mydata)
mydata$names
mydata$Ozone
is.na(mydata$Ozone)
1is.na(mydata$Ozone)
!is.na(mydata$Ozone)
sum(!is.na(mydata$Ozone))
sum(is.na(mydata$Ozone))
?mean
mean(mydata$Ozone)
mydata$Ozone
mydata(!is.na(mydata$Ozone))
mydata[!is.na(mydata$Ozone)]
mydata$Ozone
is.na(mydata$Ozone)
!is.na(mydata$Ozone)
mydata[!is.na(mydata$Ozone)]
bad <- is.na(mydata$Ozone)
bad
mydata[!bad]
mydata$Ozone[!bad]
mean(mydata$Ozone[!bad])
gooddata <- complete.cases(mydata)
gooddata
gooddata$Ozone
mydata[gooddata]
mydata$Ozone[gooddata]
mean(mydata$Ozone[gooddata])
names(mydata)
mydata[mydata$Ozone > 31]
x
y
x[x>4]
mydata[mydata$Ozone > 31]
good
mydata$Ozone
mydata$Ozone[mydata$Ozone > 31]
mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90]
mean(mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90])
bad2 <- is.na(mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90])
mean(!bad2)
bad2
mean(mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90])[!bad]
mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90][!bad]
mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90]
bad
bad2
mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90][bad2]
mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90][!bad2]
mean( mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90][!bad2]
)
mean(mydata$Solar.R[mydata$Ozone > 31 & mydata$Temp > 90], na.rm=TRUE)
mon6 <- mydata$Month[mydata$Month=6]
mon6 <- mydata$Month[mydata$Month==6]
mon6
mydata$Temp[mon6]
mydata$Temp
mean(mydata$Temp[mon6])
mydata
mon6 <- mydata[mydata$Month==6]
mydata[mydata$Month == 6]
mydata$Month
mydata$Month == 6
mydata$Temp[mydata$Month == 6]
mydata$Month[mydata$Month == 6]
mydata[mydata$Month == 6]
mydata$Temp[mydata$Month == 6]
mean(mydata$Temp[mydata$Month == 6], na.rm = TRUE)
names(mydata)
mydata$Ozone[mydata$Month==5]
max(mydata$Ozone[mydata$Month==5])
max(mydata$Ozone[mydata$Month==5], na.rm = TRUE)
m <- matrix(1:6, 2, 3)
m
for(i in seq_len(nrows(x)) {
q()
