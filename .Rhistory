q()
library(ggplot2)
library(slidify)
install.packages(c("slidify", "ggplot2", "devtools"))
g
setRepositories()
install.packages(
"slidify")
library("slidify", "ggplot2", "devtools"))
library(c(slidify, ggplot2, devtools))
library(slidify)
library(ggplot2)
library(devtools)
install.packages("rtools")
install.packages("Rtools")
find_rtools
find_rtools()
install.packages("slidify")
setRepositories()
install.packages("slidify")
library(devtools)
library(ggplot2)
library(slidify)
install.packages('slidify', repo='https://cran.cnr.Berkeley.edu/')
getOption('repos')
install.packages('slidify', repo='http://ftp.ussg.iu.edu/CRAN')
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite(c("GenomicFeatures", "AnnotationDbi"))
library(GenomicFeatures)
search()
library(AnnotationDbi)
search()
library(slidify)
install.packages('slidify')
install.packages('slidify')
library(devtools)
find_rtools()
install.packages('slidify')
q()
q()
q()
getwd()
getwd()
setwd("C:/RWDir/")
getwd()
getwd()
getwd()
setwd("./02_GettingAndCleaningData")
setwd("C:/RWDir/coursera-data-sci/coursera-data-sci/02_GettingAndCleaningData")
if(!file.exists("data")){
dir.create("data")
}
fileUrl <- "https://data.baltimorecity.gov/api/views/dz54-2aru/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
list.files("./data")
dateDownloaded <- date()
dateDownloaded
list.files("./data")
download.file(fileUrl,destfile="./data/cameras.csv",method="curl")
download.file(fileUrl,destfile="./data/cameras.csv")
dateDownloaded <- date()
dateDownloaded
cameraData <- read.table("./data/camera.csv")
header(cameraData)
head(cameraData)
cameraData <- read.table("./data/cameras.csv")
head(cameraData)
cameraData <- read.table("./data/cameras.csv", sep=",", header = TRUE)
head(cameraData)
head(cameraData)
getwd()
library(xlsx)
library(gdata)
install.packages("xlsx")
library(xlsx)
Sys.setenv(JAVA_HOME='C:\\Program Files (x86)\\Java\\jre7')
library(rJava)
library(rJava)
install.packages("data.table")
library(data.table)
DF = data.frame(x = rnorm(9), y = rep(c("a", "b", "c"), each=3), z = rnorm(9))
DT = data.table(x = rnorm(9), y = rep(c("a", "b", "c"), each=3), z = rnorm(9))
DF
DT
tables()
DT[2,]
DT[DT$y=="a",]
tables()
install.packages("data.table")
library(data.table)
DF = data.frame(x = rnorm(9), y = rep(c("a", "b", "c"), each=3), z = rnorm(9))
DT = data.table(x = rnorm(9), y = rep(c("a", "b", "c"), each=3), z = rnorm(9))
DF
DT
tables()
DT[2,]
DT[DT$y=="a",]
DT[c]
DT[c(2,3)]
DT[, c(2,3)]
DT
{
x = 1
y = 2
}
k = {print(10); 5}
print(k)
DT[,list(mean(x),sum(z))]
DT[,table(y)]
X
x
y
z
DT[, list(mean(x), sum(z))]
DT[, table(y)]
DT
DT[, y]
DT$y
DT[, w=z^2]
DT[, w:=z^2]
DT
DT2 <- DT
DT[, y:=2]
DT
DT2
head(DT, n = 3)
head(DT2, N=3)
?copy
DT2 <- copy(DT)
DT[, w:= y^2]
DT
DT[, p:= y^2]
DT[, p:=1]
DT
DT2
